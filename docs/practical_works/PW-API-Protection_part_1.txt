PW API-Protection (Part 1)

For this PW, we need to have an authentication process. So, we recommend to implement/use the JWT authentication before starting.
You can get the JWT OAuth implementation from the previous PW-JWT-OAuth  : "git clone -b PW-JWT-OAuth https://gitlab.kazan.priv.atos.fr/trainingangular2/secure-angular-training-app.git" 

1 - Protect your API - Add server-side protection for the following actions : 
    a) Unauthenticated users have access to the news API (/api/news/**)
    b) Only "Admin" profil can delete a news (authenticated user with "ROLE_ADMIN" role)
    c) Only "User" profil can add news (authenticated user with "ROLE_USER" role)
    d) Any authenticated user can "like" news
    
    Hints : 
      - use spring security annotation org.springframework.security.access.annotation.Secured to protect your REST endpoints 
      - Check existing roles in /bookstore/src/main/resources/config/liquibase/authorities.csv file
      - for a global setting, use the org.springframework.security.config.annotation.web.builders.HttpSecurity in SecurityConfiguration#configure method
      - More details on spring security api : https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#jc-method
   
2 - Protect the GUI  - Adapt client-side according to server-side protection
    a) Unauthenticated users have access to the news API (/api/news/**)
    b) Only "Admin" profil can delete a news (authenticated user with "ROLE_ADMIN" role)
    c) Only "User" profil can add news (authenticated user with "ROLE_USER" role)
    d) Any authenticated user can "like" news 

    Hints : 
    - in src/app/services/auth/principal.service.ts, declare and implement functions "isAdmin" and "isUser" (check roles from authorities's list of "this._identity" attribute)
    - in home.html, use "ngIf" directive and previous functions to hide portions of template
    - declare 'principal' service in constructor as public in home.ts to make it accessible from home.html
    - don't forget to 'ng build' the frontend (and 'mvn' the backend) after any modification (no live reloading for this PW)
